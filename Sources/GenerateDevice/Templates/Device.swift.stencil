{% set accessModifier %}{% if access-level == "public" %}public {% endif %}{% endset %}
{%- macro caseName device -%}
{{ device.productType | swiftIdentifier | lowerFirstLetter }}
{%- endmacro -%}
// Generated by generate-device.
// https://github.com/yujingaya/generate-device

import Darwin

{{ accessModifier }}enum Device: String, RawRepresentable, CaseIterable, Equatable, Hashable, Codable {
{%- for device in devices %}
    /// {{ device.productDescription }}.
    case {% call caseName device %} = "{{ device.productType }}"
{% endfor -%}
}

extension Device: CustomStringConvertible {
    var description: String {
        switch self {
{%- for device in devices %}
        case .{% call caseName device %}: return "{{ device.productDescription }}"
{%- endfor %}
        }
    }
}

extension Device: CustomDebugStringConvertible {
    var debugDescription: String {
        "Device(rawValue: \"\(rawValue)\")"
    }
}

extension Device {
    static var current: Device? {
        var name = utsname()
        uname(&name)

        let machine = withUnsafePointer(to: name.machine) {
            $0.withMemoryRebound(to: CChar.self, capacity: MemoryLayout.size(ofValue: $0)) {
                String(cString: $0)
            }
        }

        return Device(rawValue: machine)
    }
}
